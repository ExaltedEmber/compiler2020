// Generated from gram.txt by ANTLR 4.8
// jshint ignore: start
var antlr4 = require('antlr4/index');



var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0002\u001b\u00e2\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004",
    "\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005",
    "\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003",
    "\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003\n\u0003",
    "\n\u0003\n\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003",
    "\r\u0006\rZ\n\r\r\r\u000e\r[\u0003\u000e\u0006\u000e_\n\u000e\r\u000e",
    "\u000e\u000e`\u0003\u000e\u0003\u000e\u0007\u000ee\n\u000e\f\u000e\u000e",
    "\u000eh\u000b\u000e\u0003\u000e\u0003\u000e\u0006\u000el\n\u000e\r\u000e",
    "\u000e\u000em\u0005\u000ep\n\u000e\u0003\u000e\u0003\u000e\u0005\u000e",
    "t\n\u000e\u0003\u000e\u0006\u000ew\n\u000e\r\u000e\u000e\u000ex\u0005",
    "\u000e{\n\u000e\u0003\u000e\u0005\u000e~\n\u000e\u0003\u000e\u0006\u000e",
    "\u0081\n\u000e\r\u000e\u000e\u000e\u0082\u0003\u000e\u0003\u000e\u0005",
    "\u000e\u0087\n\u000e\u0003\u000e\u0006\u000e\u008a\n\u000e\r\u000e\u000e",
    "\u000e\u008b\u0005\u000e\u008e\n\u000e\u0003\u000f\u0003\u000f\u0003",
    "\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003",
    "\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003",
    "\u000f\u0005\u000f\u009f\n\u000f\u0003\u0010\u0003\u0010\u0003\u0010",
    "\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012",
    "\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013",
    "\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0005\u0013",
    "\u00b5\n\u0013\u0003\u0014\u0003\u0014\u0003\u0015\u0003\u0015\u0003",
    "\u0016\u0003\u0016\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0007",
    "\u0017\u00c1\n\u0017\f\u0017\u000e\u0017\u00c4\u000b\u0017\u0003\u0017",
    "\u0003\u0017\u0003\u0018\u0003\u0018\u0007\u0018\u00ca\n\u0018\f\u0018",
    "\u000e\u0018\u00cd\u000b\u0018\u0003\u0019\u0006\u0019\u00d0\n\u0019",
    "\r\u0019\u000e\u0019\u00d1\u0003\u0019\u0003\u0019\u0003\u001a\u0003",
    "\u001a\u0003\u001a\u0003\u001a\u0007\u001a\u00da\n\u001a\f\u001a\u000e",
    "\u001a\u00dd\u000b\u001a\u0003\u001a\u0003\u001a\u0003\u001a\u0003\u001a",
    "\u0003\u00db\u0002\u001b\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006",
    "\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e",
    "\u001b\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016",
    "+\u0017-\u0018/\u00191\u001a3\u001b\u0003\u0002\u0012\u0003\u0002**",
    "\u0003\u0002++\u0003\u0002??\u0003\u0002}}\u0003\u0002\u007f\u007f\u0003",
    "\u00022;\u0004\u0002GGgg\u0004\u0002--//\u0004\u0002>>@@\u0003\u0002",
    "--\u0005\u0002\'\',,11\u0003\u0002//\u0003\u0002$$\u0005\u0002C\\aa",
    "c|\u0006\u00022;C\\aac|\u0005\u0002\u000b\f\u000f\u000f\"\"\u0002\u00f9",
    "\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002",
    "\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002",
    "\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002",
    "\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002",
    "\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002",
    "\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002",
    "\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002",
    "\u0002\u001f\u0003\u0002\u0002\u0002\u0002!\u0003\u0002\u0002\u0002",
    "\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002\u0002\u0002\u0002",
    "\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002\u0002\u0002\u0002+\u0003",
    "\u0002\u0002\u0002\u0002-\u0003\u0002\u0002\u0002\u0002/\u0003\u0002",
    "\u0002\u0002\u00021\u0003\u0002\u0002\u0002\u00023\u0003\u0002\u0002",
    "\u0002\u00035\u0003\u0002\u0002\u0002\u00057\u0003\u0002\u0002\u0002",
    "\u00079\u0003\u0002\u0002\u0002\t?\u0003\u0002\u0002\u0002\u000bA\u0003",
    "\u0002\u0002\u0002\rC\u0003\u0002\u0002\u0002\u000fE\u0003\u0002\u0002",
    "\u0002\u0011H\u0003\u0002\u0002\u0002\u0013M\u0003\u0002\u0002\u0002",
    "\u0015T\u0003\u0002\u0002\u0002\u0017V\u0003\u0002\u0002\u0002\u0019",
    "Y\u0003\u0002\u0002\u0002\u001b\u008d\u0003\u0002\u0002\u0002\u001d",
    "\u009e\u0003\u0002\u0002\u0002\u001f\u00a0\u0003\u0002\u0002\u0002!",
    "\u00a3\u0003\u0002\u0002\u0002#\u00a7\u0003\u0002\u0002\u0002%\u00b4",
    "\u0003\u0002\u0002\u0002\'\u00b6\u0003\u0002\u0002\u0002)\u00b8\u0003",
    "\u0002\u0002\u0002+\u00ba\u0003\u0002\u0002\u0002-\u00bc\u0003\u0002",
    "\u0002\u0002/\u00c7\u0003\u0002\u0002\u00021\u00cf\u0003\u0002\u0002",
    "\u00023\u00d5\u0003\u0002\u0002\u000256\u0007=\u0002\u00026\u0004\u0003",
    "\u0002\u0002\u000278\u0007.\u0002\u00028\u0006\u0003\u0002\u0002\u0002",
    "9:\u0007y\u0002\u0002:;\u0007j\u0002\u0002;<\u0007k\u0002\u0002<=\u0007",
    "n\u0002\u0002=>\u0007g\u0002\u0002>\b\u0003\u0002\u0002\u0002?@\t\u0002",
    "\u0002\u0002@\n\u0003\u0002\u0002\u0002AB\t\u0003\u0002\u0002B\f\u0003",
    "\u0002\u0002\u0002CD\t\u0004\u0002\u0002D\u000e\u0003\u0002\u0002\u0002",
    "EF\u0007k\u0002\u0002FG\u0007h\u0002\u0002G\u0010\u0003\u0002\u0002",
    "\u0002HI\u0007g\u0002\u0002IJ\u0007n\u0002\u0002JK\u0007u\u0002\u0002",
    "KL\u0007g\u0002\u0002L\u0012\u0003\u0002\u0002\u0002MN\u0007t\u0002",
    "\u0002NO\u0007g\u0002\u0002OP\u0007v\u0002\u0002PQ\u0007w\u0002\u0002",
    "QR\u0007t\u0002\u0002RS\u0007p\u0002\u0002S\u0014\u0003\u0002\u0002",
    "\u0002TU\t\u0005\u0002\u0002U\u0016\u0003\u0002\u0002\u0002VW\t\u0006",
    "\u0002\u0002W\u0018\u0003\u0002\u0002\u0002XZ\t\u0007\u0002\u0002YX",
    "\u0003\u0002\u0002\u0002Z[\u0003\u0002\u0002\u0002[Y\u0003\u0002\u0002",
    "\u0002[\\\u0003\u0002\u0002\u0002\\\u001a\u0003\u0002\u0002\u0002]_",
    "\t\u0007\u0002\u0002^]\u0003\u0002\u0002\u0002_`\u0003\u0002\u0002\u0002",
    "`^\u0003\u0002\u0002\u0002`a\u0003\u0002\u0002\u0002ab\u0003\u0002\u0002",
    "\u0002bf\u00070\u0002\u0002ce\t\u0007\u0002\u0002dc\u0003\u0002\u0002",
    "\u0002eh\u0003\u0002\u0002\u0002fd\u0003\u0002\u0002\u0002fg\u0003\u0002",
    "\u0002\u0002gp\u0003\u0002\u0002\u0002hf\u0003\u0002\u0002\u0002ik\u0007",
    "0\u0002\u0002jl\t\u0007\u0002\u0002kj\u0003\u0002\u0002\u0002lm\u0003",
    "\u0002\u0002\u0002mk\u0003\u0002\u0002\u0002mn\u0003\u0002\u0002\u0002",
    "np\u0003\u0002\u0002\u0002o^\u0003\u0002\u0002\u0002oi\u0003\u0002\u0002",
    "\u0002pz\u0003\u0002\u0002\u0002qs\t\b\u0002\u0002rt\t\t\u0002\u0002",
    "sr\u0003\u0002\u0002\u0002st\u0003\u0002\u0002\u0002tv\u0003\u0002\u0002",
    "\u0002uw\t\u0007\u0002\u0002vu\u0003\u0002\u0002\u0002wx\u0003\u0002",
    "\u0002\u0002xv\u0003\u0002\u0002\u0002xy\u0003\u0002\u0002\u0002y{\u0003",
    "\u0002\u0002\u0002zq\u0003\u0002\u0002\u0002z{\u0003\u0002\u0002\u0002",
    "{\u008e\u0003\u0002\u0002\u0002|~\u0007/\u0002\u0002}|\u0003\u0002\u0002",
    "\u0002}~\u0003\u0002\u0002\u0002~\u0080\u0003\u0002\u0002\u0002\u007f",
    "\u0081\t\u0007\u0002\u0002\u0080\u007f\u0003\u0002\u0002\u0002\u0081",
    "\u0082\u0003\u0002\u0002\u0002\u0082\u0080\u0003\u0002\u0002\u0002\u0082",
    "\u0083\u0003\u0002\u0002\u0002\u0083\u0084\u0003\u0002\u0002\u0002\u0084",
    "\u0086\t\b\u0002\u0002\u0085\u0087\t\t\u0002\u0002\u0086\u0085\u0003",
    "\u0002\u0002\u0002\u0086\u0087\u0003\u0002\u0002\u0002\u0087\u0089\u0003",
    "\u0002\u0002\u0002\u0088\u008a\t\u0007\u0002\u0002\u0089\u0088\u0003",
    "\u0002\u0002\u0002\u008a\u008b\u0003\u0002\u0002\u0002\u008b\u0089\u0003",
    "\u0002\u0002\u0002\u008b\u008c\u0003\u0002\u0002\u0002\u008c\u008e\u0003",
    "\u0002\u0002\u0002\u008do\u0003\u0002\u0002\u0002\u008d}\u0003\u0002",
    "\u0002\u0002\u008e\u001c\u0003\u0002\u0002\u0002\u008f\u0090\u0007k",
    "\u0002\u0002\u0090\u0091\u0007p\u0002\u0002\u0091\u009f\u0007v\u0002",
    "\u0002\u0092\u0093\u0007f\u0002\u0002\u0093\u0094\u0007q\u0002\u0002",
    "\u0094\u0095\u0007w\u0002\u0002\u0095\u0096\u0007d\u0002\u0002\u0096",
    "\u0097\u0007n\u0002\u0002\u0097\u009f\u0007g\u0002\u0002\u0098\u0099",
    "\u0007u\u0002\u0002\u0099\u009a\u0007v\u0002\u0002\u009a\u009b\u0007",
    "t\u0002\u0002\u009b\u009c\u0007k\u0002\u0002\u009c\u009d\u0007p\u0002",
    "\u0002\u009d\u009f\u0007i\u0002\u0002\u009e\u008f\u0003\u0002\u0002",
    "\u0002\u009e\u0092\u0003\u0002\u0002\u0002\u009e\u0098\u0003\u0002\u0002",
    "\u0002\u009f\u001e\u0003\u0002\u0002\u0002\u00a0\u00a1\u0007q\u0002",
    "\u0002\u00a1\u00a2\u0007t\u0002\u0002\u00a2 \u0003\u0002\u0002\u0002",
    "\u00a3\u00a4\u0007c\u0002\u0002\u00a4\u00a5\u0007p\u0002\u0002\u00a5",
    "\u00a6\u0007f\u0002\u0002\u00a6\"\u0003\u0002\u0002\u0002\u00a7\u00a8",
    "\u0007p\u0002\u0002\u00a8\u00a9\u0007q\u0002\u0002\u00a9\u00aa\u0007",
    "v\u0002\u0002\u00aa$\u0003\u0002\u0002\u0002\u00ab\u00ac\u0007@\u0002",
    "\u0002\u00ac\u00b5\u0007?\u0002\u0002\u00ad\u00ae\u0007>\u0002\u0002",
    "\u00ae\u00b5\u0007?\u0002\u0002\u00af\u00b5\t\n\u0002\u0002\u00b0\u00b1",
    "\u0007#\u0002\u0002\u00b1\u00b5\u0007?\u0002\u0002\u00b2\u00b3\u0007",
    "?\u0002\u0002\u00b3\u00b5\u0007?\u0002\u0002\u00b4\u00ab\u0003\u0002",
    "\u0002\u0002\u00b4\u00ad\u0003\u0002\u0002\u0002\u00b4\u00af\u0003\u0002",
    "\u0002\u0002\u00b4\u00b0\u0003\u0002\u0002\u0002\u00b4\u00b2\u0003\u0002",
    "\u0002\u0002\u00b5&\u0003\u0002\u0002\u0002\u00b6\u00b7\t\u000b\u0002",
    "\u0002\u00b7(\u0003\u0002\u0002\u0002\u00b8\u00b9\t\f\u0002\u0002\u00b9",
    "*\u0003\u0002\u0002\u0002\u00ba\u00bb\t\r\u0002\u0002\u00bb,\u0003\u0002",
    "\u0002\u0002\u00bc\u00c2\u0007$\u0002\u0002\u00bd\u00be\u0007^\u0002",
    "\u0002\u00be\u00c1\u0007$\u0002\u0002\u00bf\u00c1\n\u000e\u0002\u0002",
    "\u00c0\u00bd\u0003\u0002\u0002\u0002\u00c0\u00bf\u0003\u0002\u0002\u0002",
    "\u00c1\u00c4\u0003\u0002\u0002\u0002\u00c2\u00c0\u0003\u0002\u0002\u0002",
    "\u00c2\u00c3\u0003\u0002\u0002\u0002\u00c3\u00c5\u0003\u0002\u0002\u0002",
    "\u00c4\u00c2\u0003\u0002\u0002\u0002\u00c5\u00c6\u0007$\u0002\u0002",
    "\u00c6.\u0003\u0002\u0002\u0002\u00c7\u00cb\t\u000f\u0002\u0002\u00c8",
    "\u00ca\t\u0010\u0002\u0002\u00c9\u00c8\u0003\u0002\u0002\u0002\u00ca",
    "\u00cd\u0003\u0002\u0002\u0002\u00cb\u00c9\u0003\u0002\u0002\u0002\u00cb",
    "\u00cc\u0003\u0002\u0002\u0002\u00cc0\u0003\u0002\u0002\u0002\u00cd",
    "\u00cb\u0003\u0002\u0002\u0002\u00ce\u00d0\t\u0011\u0002\u0002\u00cf",
    "\u00ce\u0003\u0002\u0002\u0002\u00d0\u00d1\u0003\u0002\u0002\u0002\u00d1",
    "\u00cf\u0003\u0002\u0002\u0002\u00d1\u00d2\u0003\u0002\u0002\u0002\u00d2",
    "\u00d3\u0003\u0002\u0002\u0002\u00d3\u00d4\b\u0019\u0002\u0002\u00d4",
    "2\u0003\u0002\u0002\u0002\u00d5\u00d6\u00071\u0002\u0002\u00d6\u00d7",
    "\u00071\u0002\u0002\u00d7\u00db\u0003\u0002\u0002\u0002\u00d8\u00da",
    "\u000b\u0002\u0002\u0002\u00d9\u00d8\u0003\u0002\u0002\u0002\u00da\u00dd",
    "\u0003\u0002\u0002\u0002\u00db\u00dc\u0003\u0002\u0002\u0002\u00db\u00d9",
    "\u0003\u0002\u0002\u0002\u00dc\u00de\u0003\u0002\u0002\u0002\u00dd\u00db",
    "\u0003\u0002\u0002\u0002\u00de\u00df\u0007\f\u0002\u0002\u00df\u00e0",
    "\u0003\u0002\u0002\u0002\u00e0\u00e1\b\u001a\u0002\u0002\u00e14\u0003",
    "\u0002\u0002\u0002\u0017\u0002[`fmosxz}\u0082\u0086\u008b\u008d\u009e",
    "\u00b4\u00c0\u00c2\u00cb\u00d1\u00db\u0003\b\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function gramLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

gramLexer.prototype = Object.create(antlr4.Lexer.prototype);
gramLexer.prototype.constructor = gramLexer;

Object.defineProperty(gramLexer.prototype, "atn", {
        get : function() {
                return atn;
        }
});

gramLexer.EOF = antlr4.Token.EOF;
gramLexer.SEMI = 1;
gramLexer.COMMA = 2;
gramLexer.WHILE = 3;
gramLexer.LP = 4;
gramLexer.RP = 5;
gramLexer.EQ = 6;
gramLexer.IF = 7;
gramLexer.ELSE = 8;
gramLexer.RETURN = 9;
gramLexer.LBR = 10;
gramLexer.RBR = 11;
gramLexer.NUM = 12;
gramLexer.FPNUM = 13;
gramLexer.TYPE = 14;
gramLexer.OR = 15;
gramLexer.AND = 16;
gramLexer.NOT = 17;
gramLexer.RELOP = 18;
gramLexer.PLUS = 19;
gramLexer.MULOP = 20;
gramLexer.MINUS = 21;
gramLexer.STRING_CONSTANT = 22;
gramLexer.ID = 23;
gramLexer.WHITESPACE = 24;
gramLexer.COMMENT = 25;

gramLexer.prototype.channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];

gramLexer.prototype.modeNames = [ "DEFAULT_MODE" ];

gramLexer.prototype.literalNames = [ null, "';'", "','", "'while'", null, 
                                     null, null, "'if'", "'else'", "'return'", 
                                     null, null, null, null, null, "'or'", 
                                     "'and'", "'not'" ];

gramLexer.prototype.symbolicNames = [ null, "SEMI", "COMMA", "WHILE", "LP", 
                                      "RP", "EQ", "IF", "ELSE", "RETURN", 
                                      "LBR", "RBR", "NUM", "FPNUM", "TYPE", 
                                      "OR", "AND", "NOT", "RELOP", "PLUS", 
                                      "MULOP", "MINUS", "STRING_CONSTANT", 
                                      "ID", "WHITESPACE", "COMMENT" ];

gramLexer.prototype.ruleNames = [ "SEMI", "COMMA", "WHILE", "LP", "RP", 
                                  "EQ", "IF", "ELSE", "RETURN", "LBR", "RBR", 
                                  "NUM", "FPNUM", "TYPE", "OR", "AND", "NOT", 
                                  "RELOP", "PLUS", "MULOP", "MINUS", "STRING_CONSTANT", 
                                  "ID", "WHITESPACE", "COMMENT" ];

gramLexer.prototype.grammarFileName = "gram.txt";


exports.gramLexer = gramLexer;

