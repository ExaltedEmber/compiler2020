grammar gram;
SEMI : ';';
WHILE : 'while';
LP : [(];
RP : [)];
IF : 'if';
ELSE : 'else';
RETURN : 'return';
LBR : [{];
RBR : [}];
NUM : [0-9]+;
WHITESPACE : [ \r\n\t]+ -> skip;
COMMENT : '//' .*?'\n' -> skip;

program : braceblock;
stmts : stmt stmts | ;
stmt : cond | loop | return_stmt SEMI;
loop : WHILE LP expr RP braceblock;
cond : IF LP expr RP braceblock | IF LP expr RP braceblock ELSE braceblock;
braceblock : LBR stmts RBR;
return_stmt : RETURN expr;
expr : NUM;
lambda : ;